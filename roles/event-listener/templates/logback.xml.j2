<configuration debug="true">

    <!-- ===================================================== -->
    <!-- Log Formatter -->
    <!-- ===================================================== -->
    <property name="SERVICE_LOG_PATTERN"
              value="%method %logger{26} tid:[%X{trace_id}] domain:[%X{domain}] %msg"/>
    <property name="EVENT_LOG_PATTERN"
              value="tid:[%X{trace_id}] domain:[%X{domain}] %msg"/>
    <property name="ACCESS_LOG_PATTERN"
              value="%msg"/>


    <!-- ===================================================== -->
    <!-- Debug Appender -->
    <!-- ===================================================== -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level ${SERVICE_LOG_PATTERN}%n</pattern>
        </encoder>
    </appender>

    <appender name="STDOUT-LOGSTASH" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <message/>
                <loggerName/>
                <threadName/>
                <logLevel/>
                <logLevelValue/>
                <stackTrace/>
                <context/>
                <contextName/>
                <mdc/>
                <arguments/>
            </providers>
        </encoder>
    </appender>

    <!-- ===================================================== -->
    <!-- Rolling Appender -->
    <!-- ===================================================== -->
    <!-- Service Log (Rollover daily/50MB) -->
    <!-- See http://logback.qos.ch/manual/appenders.html#RollingFileAppender -->
    <appender name="SERVICE-ASYNC-ROLLING" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
        <appender name="SERVICE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>logs/app.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${log.service.output:-logs/service.log}-%d{yyyy-MM-dd}.%i</fileNamePattern>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>50MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                <maxHistory>90</maxHistory>
            </rollingPolicy>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <pattern>
                        <pattern>
                            {"type":"appLog"}
                        </pattern>
                    </pattern>
                    <timestamp/>
                    <message/>
                    <loggerName/>
                    <threadName/>
                    <logLevel/>
                    <logLevelValue/>
                    <stackTrace/>
                    <context/>
                    <contextName/>
                    <mdc/>
                    <arguments/>
                </providers>
            </encoder>
        </appender>
    </appender>

    <!-- Access Log (Rollover daily/50MB) -->
    <appender name="ACCESS-ASYNC-ROLLING" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
        <appender name="ACCESS" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>logs/access.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>logs/access.log-%d{yyyy-MM-dd}.%i</fileNamePattern>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>50MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                <maxHistory>90</maxHistory>
            </rollingPolicy>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp/>
                    <message/>
                    <threadName/>
                    <context/>
                    <contextName/>
                    <mdc/>
                    <arguments/>
                </providers>
            </encoder>
        </appender>
    </appender>

    <!-- Event Log (Rollover daily/50MB) -->
    <appender name="EVENT-ASYNC-ROLLING" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
        <appender name="EVENT" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>logs/event.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>logs/event.log-%d{yyyy-MM-dd}.%i</fileNamePattern>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>50MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                <maxHistory>360</maxHistory>
            </rollingPolicy>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp/>
                    <message/>
                    <threadName/>
                    <context/>
                    <contextName/>
                    <mdc/>
                    <arguments/>
                </providers>
            </encoder>
        </appender>
    </appender>

    <!-- Audit Log (Rollover daily/50MB) -->
    <appender name="AUDIT-ASYNC-ROLLING" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">
        <appender name="AUDIT" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>logs/audit.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>logs/audit.log-%d{yyyy-MM-dd}.%i</fileNamePattern>
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>50MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
                <maxHistory>180</maxHistory>
            </rollingPolicy>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp/>
                    <message/>
                    <threadName/>
                    <context/>
                    <contextName/>
                    <mdc/>
                    <arguments/>
                </providers>
            </encoder>
        </appender>
    </appender>


    <!-- ===================================================== -->
    <!-- Logger Config -->
    <!-- ===================================================== -->
    <!-- Root Config -->
    <root level="{{ log_level }}">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="SERVICE-ASYNC-ROLLING"/>
    </root>

    <!-- Kiri Config -->
    <logger name="tech.kiri.common.logging.AppLogger"
            level="{{ log_level }}"
            additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="SERVICE-ASYNC-ROLLING"/>
    </logger>

    <logger name="com.twitter.finatra.http.filters.AccessLoggingFilter"
            level="Info"
            additivity="false">
        <appender-ref ref="ACCESS-ASYNC-ROLLING"/>
    </logger>

    <logger name="tech.kiri.common.logging.AccessLogger"
            level="Info"
            additivity="false">
        <appender-ref ref="ACCESS-ASYNC-ROLLING"/>
    </logger>

    <logger name="tech.kiri.common.logging.EventLogger"
            level="Info"
            additivity="false">
        <appender-ref ref="EVENT-ASYNC-ROLLING"/>
    </logger>

    <logger name="tech.kiri.common.logging.AuditLogger"
            level="Info"
            additivity="false">
        <appender-ref ref="AUDIT-ASYNC-ROLLING"/>
    </logger>

    <!-- Per-Package Config -->
    <logger name="com.twitter" level="info"/>
    <logger name="com.twitter.logging.ScribeHandler" level="warn"/>
    <logger name="com.twitter.zookeeper.client.internal" level="warn"/>

    <logger name="io.swagger.converter.ModelConverterContextImpl" level="WARN" />
    <logger name="io.swagger.converter.ModelConverters" level="WARN" />
    <logger name="io.swagger.jackson.ModelResolver" level="WARN" />

    <logger name="reactivemongo.api.Cursor" level="INFO" />
    <logger name="reactivemongo.api.Failover" level="INFO" />
    <logger name="reactivemongo.core.actors.MongoDBSystem" level="INFO" />
    <logger name="reactivemongo.core.actors.MonitorActor" level="INFO" />


</configuration>